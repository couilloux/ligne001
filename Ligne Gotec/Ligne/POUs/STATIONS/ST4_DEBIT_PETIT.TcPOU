<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.26">
  <POU Name="ST4_DEBIT_PETIT" Id="{a872d9e6-4499-439d-a878-33aa83e05ee2}">
    <Declaration><![CDATA[PROGRAM ST4_DEBIT_PETIT
VAR
	STEP: INT := 0;
	JIG_STATUS_R_TRIG: R_TRIG;
	START_TAMPO_AMORCAGE: BOOL;
	TAMPO_AMORCAGE_TON: TON;
	START_TAMPO_REGLAGE: BOOL;
	TAMPO_REGLAGE_TON: TON;
	START_TAMPO_MESURE_DEBIT: BOOL;
	TAMPO_MESURE_DEBIT_TON: TON;
	START_TAMPO_VIDANGE: BOOL;
	TAMPO_VIDANGE_TON: TON;
	START_TAMPO_MESURE_DEBIT_MAX: BOOL;
	TAMPO_MESURE_DEBIT_MAX_TON: TON;
	POIDS_QMAX_DEBUT: REAL;
	POIDS_Q_DEBUT: REAL;
	P_ERREUR: REAL;
	START_TAMPO_PRESSION: BOOL;
	TAMPO_PRESSION_TON: TON;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*******************************************************
*
* Station 4 - Petits débits
*
*
*********************************************************)
IF NOT(GEMMA.STEP='F1') THEN
	STEP:=0;
END_IF;


CASE STEP OF

0: (*Init*)

	ST4_4V4 := FALSE;
	ST4_4V5 := FALSE;
	ST4_4V6 := FALSE;

	ST4_4V10 := FALSE;
	ST4_4V12 := FALSE;
	ST4_4V13 := FALSE;
	
	
	FLAGS.ST4_RELEASE_CARRIER := FALSE;
	START_TAMPO_AMORCAGE := FALSE;
	START_TAMPO_MESURE_DEBIT:= FALSE;
	START_TAMPO_MESURE_DEBIT_MAX:= FALSE;
	START_TAMPO_VIDANGE:= FALSE;
	START_TAMPO_REGLAGE:= FALSE;
	START_TAMPO_PRESSION:= FALSE;
	
	
	STEP := STEP + 10;
	
10: (*Attend une palette / flanc montant du status*)

	IF JIG_STATUS_R_TRIG.Q THEN
		STEP := STEP + 10;
	END_IF;
	
20: (*Descend le vérin du dessus*)

	ST4_4V4 := TRUE;
	POIDS_QMAX_DEBUT	:= 0;	(*Met à 0 les différentes variables pour le calcul et résultat des débits*)
	POIDS_Q_DEBUT		:= 0;
	ST4_Q				:= 0;
	ST4_QMAX			:= 0;
	STEP := STEP + 10;
	
30: (*Attend vérin dessus sorti*)

	IF ST4_4B4 THEN
		STEP := STEP + 10;
	END_IF;

40: (*Monte le vérin du dessous*)

	ST4_4V5 := TRUE;
	STEP := STEP + 10;
	
50: (*Attend vérin dessus sorti*)

	IF ST4_4B5 THEN
		STEP := STEP + 10;
	END_IF;
	
60: (*Sort le vérin électrique*)

	ST4_4V6 := TRUE;
	STEP := STEP + 10;
	
70: (*Attend vérin électrique sortie*)

	IF ST4_4B6 THEN
		STEP := STEP + 10;
	END_IF;

80: (*Allume la pompe*)

	ST4_POWER := TRUE;
	ST4_4V10 := TRUE;
	ST4_4V13 := TRUE;
	STEP := 100;
	
	
(**************************************************************************)
100: (*Démarre la tampo pour l'amorcage*)

	START_TAMPO_AMORCAGE := TRUE;
	STEP := STEP + 10;
	
110: (*Attend fin tampo amorcage*)

	IF TAMPO_AMORCAGE_TON.Q THEN
		START_TAMPO_AMORCAGE := FALSE;
		STEP := STEP + 10;
	END_IF;
	
120: (*Démarre la tampo pour la mesure de Qmax*)

	START_TAMPO_MESURE_DEBIT_MAX := TRUE;
	POIDS_QMAX_DEBUT := ST4_POIDS;
	STEP := STEP + 10;
	
130: (*Attend fin tampo mesure de Qmax ***********************************************************)
	IF TAMPO_MESURE_DEBIT_MAX_TON.Q THEN
		ST4_QMAX := CONVERT_MASS_TO_FLOW(ST4_POIDS - POIDS_QMAX_DEBUT, PUMP_PARAMS.ST4_TEMPS_MESURE_DEBIT_MAX);(*Calcul du débit max*)
		
		QMAX_ARRAY[INDEX_QMAX_ARRAY]:=ST4_QMAX; (*Array des derniers résultats*)
		INDEX_QMAX_ARRAY := INDEX_QMAX_ARRAY+1;
		
		START_TAMPO_MESURE_DEBIT_MAX := FALSE;
		ST4_4V12 := TRUE;
		ST4_4V13 := FALSE;
		STEP := STEP + 10;
	END_IF;
	
140: (*Démarre la tampo pour la mise sous pression*)

	START_TAMPO_PRESSION := TRUE;
	STEP := STEP + 10;
	
150: (*Attend fin tampo mise sous pression*)

	IF TAMPO_PRESSION_TON.Q THEN
		START_TAMPO_PRESSION := FALSE;
		STEP := STEP + 10;
	END_IF;
	
160: (*Démarre la tampo pour le réglage*)

	START_TAMPO_REGLAGE := TRUE;
	STEP := STEP + 10;
	
170: (*Attend fin tampo réglage*)

	(*Réglage pression*)
	P_ERREUR:=PUMP_PARAMS.ST4_PRESSION_CONSIGNE - ST4_PRESSURE;
	FLAGS.MOTOR_ST4_POSITION := FLAGS.MOTOR_ST4_POSITION + REAL_TO_INT(P_ERREUR*7);(* P_ERREUR*GAIN *)

	IF TAMPO_REGLAGE_TON.Q THEN
		START_TAMPO_REGLAGE := FALSE;
		STEP := STEP + 10;
	END_IF;
	
180: (*Démarre la tampo pour la mesure de debit*************************************************)

	START_TAMPO_MESURE_DEBIT := TRUE;
	POIDS_Q_DEBUT := ST4_POIDS;
	STEP := STEP + 10;

	
190: (*Attend fin tampo amorcage - MESURE EN COURT*)

	(*Réglage pression*)
	P_ERREUR:=PUMP_PARAMS.ST4_PRESSION_CONSIGNE - ST4_PRESSURE;
	FLAGS.MOTOR_ST4_POSITION := FLAGS.MOTOR_ST4_POSITION + REAL_TO_INT(P_ERREUR*7);(* P_ERREUR*GAIN *)

	IF TAMPO_MESURE_DEBIT_TON.Q THEN
		ST4_Q := CONVERT_MASS_TO_FLOW(ST4_POIDS - POIDS_Q_DEBUT, PUMP_PARAMS.ST4_TEMPS_MESURE_DEBIT);(*Calcul du débit de travail*)
		
		Q_ARRAY[INDEX_Q_ARRAY]:=ST4_Q; (*Array des derniers résultats*)
		INDEX_Q_ARRAY := INDEX_Q_ARRAY+1;
		
		START_TAMPO_MESURE_DEBIT := FALSE;
		STEP := 300;
	END_IF;
	
	

(**************************************************************************)	

300: (*Descend le vérin du dessous*)

	ST4_4V5 := FALSE;
	ST4_4V10 := FALSE;	(* ferme la vanne avant la pompe*)
	ST4_4V12 := FALSE;
	ST4_4V13 := TRUE;
	STEP := STEP + 10;

310: (*Démarre la tampo de vidange de la pompe*)

	START_TAMPO_VIDANGE := TRUE;
	STEP := STEP + 10;
	
320: (*Attend fin tampo amorcage*)

	IF TAMPO_VIDANGE_TON.Q THEN
		START_TAMPO_VIDANGE := FALSE;
		ST4_4V13 := FALSE;
		ST4_POWER := FALSE;
		STEP := STEP + 10;
	END_IF;

330: (*Rentre le vérin électrique*)

	ST4_4V6 := FALSE;
	STEP := STEP + 10;
	
	
340: (*Monte le vérin du dessus*)

	ST4_4V4 := FALSE;
	STEP := STEP + 10;

350: (*Libère la palette*)

	FLAGS.ST4_RELEASE_CARRIER := TRUE;
	STEP := 0;


ELSE
    (*default case*);
END_CASE;

(*FBs*)

TAMPO_AMORCAGE_TON(IN:= START_TAMPO_AMORCAGE, PT:= PUMP_PARAMS.ST4_TEMPS_POMPAGE);
TAMPO_REGLAGE_TON(IN:= START_TAMPO_REGLAGE, PT:= PUMP_PARAMS.ST4_TEMPS_REGLAGE_PRESSION);
TAMPO_VIDANGE_TON(IN:= START_TAMPO_VIDANGE, PT:= TEMPS_VIDANGE_POMPE);
TAMPO_PRESSION_TON(IN:= START_TAMPO_PRESSION, PT:= TEMPS_CHANGEMENT_PRESSION);
TAMPO_MESURE_DEBIT_TON(IN:= START_TAMPO_MESURE_DEBIT, PT:= PUMP_PARAMS.ST4_TEMPS_MESURE_DEBIT);
TAMPO_MESURE_DEBIT_MAX_TON(IN:= START_TAMPO_MESURE_DEBIT_MAX, PT:= PUMP_PARAMS.ST4_TEMPS_MESURE_DEBIT_MAX);
JIG_STATUS_R_TRIG(CLK:= CONVEYOR.JIG_ST4.STATUS);
PROG_STEPS.ST4:=STEP;]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>