<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.26">
  <POU Name="ST3_ETANCHEITE" Id="{4c8d0ed2-e515-4489-ae28-5ece9354e79b}">
    <Declaration><![CDATA[PROGRAM ST3_ETANCHEITE
VAR
	STEP: INT := 0;
	JIG_STATUS_R_TRIG: R_TRIG;
	START_TAMPO_MISE_SOUS_PRESSION: BOOL;
	TAMPO_MISE_SOUS_PRESSION: TON;
	START_TAMPO_STABILISATION: BOOL;
	TAMPO_STABILISATION: TON;
	START_TAMPO_MESURE: BOOL;
	TAMPO_MESURE: TON;
	PRESSION_DEBUT: REAL;
	PRESSION_FIN: REAL;
	TAMPO_SORTIE_VERIN_HAUT_TON: TON;
	START_TAMPO_VERIN_HAUT: BOOL;
	TAMPO_SORTIE_VERIN_BAS_TON: TON;
	START_TAMPO_VERIN_BAS: BOOL;
	TAMPO_DEPRESSION_TON: TON;
	START_TAMPO_DEPRESSION: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*******************************************************
*
* Station 3 - Etanchéité
*
*
*********************************************************)
IF NOT(GEMMA.STEP='F1') THEN
	STEP:=0;
END_IF;


CASE STEP OF

0: (*Init*)

	ST3_3V4 := FALSE;
	ST3_3V5 := FALSE;
	ST3_3V10 := FALSE;
	ST3_3V11 := FALSE;
	ST3_3V12 := TRUE;
	
	FLAGS.ST3_RELEASE_CARRIER := FALSE;
	
	START_TAMPO_MISE_SOUS_PRESSION := FALSE;
	START_TAMPO_STABILISATION := FALSE;
	START_TAMPO_MESURE := FALSE;
	START_TAMPO_VERIN_HAUT := FALSE;
	START_TAMPO_VERIN_BAS := FALSE;
	START_TAMPO_DEPRESSION := FALSE;

	
	STEP := STEP + 10;
	
10: (*Attend une palette / flanc montant du status*)

	IF JIG_STATUS_R_TRIG.Q THEN
		STEP := STEP + 10;
	END_IF;
	
20: (*Descend le vérin du dessus*)

	ST3_3V4 := TRUE;
	START_TAMPO_VERIN_HAUT := TRUE;
	STEP := STEP + 10;
	
30: (*Attend vérin dessus sorti*)

	IF TAMPO_SORTIE_VERIN_HAUT_TON.Q THEN
		START_TAMPO_VERIN_HAUT :=FALSE;
		STEP := STEP + 10;
	END_IF;

40: (*Monte le vérin du dessous*)

	ST3_3V5 := TRUE;
	IF PUMP_PARAMS.GEN_BYPASS THEN
		ST3_3V7 := TRUE;
	END_IF
	START_TAMPO_VERIN_BAS := TRUE;
	STEP := STEP + 10;
	
50: (*Attend vérin dessus sorti*)

	IF TAMPO_SORTIE_VERIN_BAS_TON.Q THEN
		START_TAMPO_VERIN_BAS := FALSE;
		STEP := 100;
	END_IF;
	
	
(**************************************************************************)
100: (*Mise sous pression de la cartouche*)

	ST3_3V10 := TRUE;
	ST3_3V11 := FALSE;
	ST3_3V12 := TRUE;
	
	START_TAMPO_MISE_SOUS_PRESSION := TRUE;
	
	STEP := STEP + 10;
	
	
110: (*Tampo pour la mise sous pression de la cartouche*)

	IF TAMPO_MISE_SOUS_PRESSION.Q THEN
		START_TAMPO_MISE_SOUS_PRESSION := FALSE;
		STEP := STEP + 10;
	END_IF;

120: (*Start stabilisation*)

	START_TAMPO_STABILISATION := TRUE;
	ST3_3V10 := FALSE;
	
	STEP := STEP + 10;	

130: (*Tampo pour la stabilisation de la pression dans la cartouche*)

	IF TAMPO_STABILISATION.Q THEN
		START_TAMPO_STABILISATION := FALSE;
		STEP := STEP + 10;
	END_IF;
	
140: (*Start mesure*)

	START_TAMPO_MESURE := TRUE;
	ST3_3V12 := FALSE;
	PRESSION_DEBUT := ST3_PRESSION; (* Mesure de la pression au début du test *)
	
	STEP := STEP + 10;	

150: (*Tampo pour la mesure du delta P*)

	IF TAMPO_MESURE.Q THEN
		START_TAMPO_MESURE := FALSE;
		PRESSION_FIN := ST3_PRESSION; (* Mesure de la pression à la fin du test *)
		ST3_DELTA_P := PRESSION_FIN - PRESSION_DEBUT; (* Calcule de la chutte de pression *)
		STEP := STEP + 10;
	END_IF;
	
160: (*Fin mesure, dépressiorisation de la cartouche*)

	ST3_3V10 := FALSE;
	ST3_3V11 := TRUE;
	ST3_3V12 := TRUE;
	
	START_TAMPO_DEPRESSION := TRUE;
	
	STEP := STEP + 10;

170: (*Tampo dépression de cartouche*)

	IF TAMPO_DEPRESSION_TON.Q THEN
		START_TAMPO_DEPRESSION := FALSE;
		(*STEP := 300;*)
	END_IF;	
	
	

(**************************************************************************)	

300: (*Descend le vérin du dessous*)

	ST3_3V5 := FALSE;
	ST3_3V7 := FALSE;
	STEP := STEP + 10;
	
310: (*Monte le vérin du dessus*)

	ST3_3V4 := FALSE;
	STEP := STEP + 10;

320: (*Libère la palette*)

	FLAGS.ST3_RELEASE_CARRIER := TRUE;
	STEP := 0;


ELSE
    (*default case*);
END_CASE;

(*FBs*)

TAMPO_SORTIE_VERIN_HAUT_TON(IN:= START_TAMPO_VERIN_HAUT, PT:= TEMPS_SORTIE_VERIN);
TAMPO_SORTIE_VERIN_BAS_TON(IN:= START_TAMPO_VERIN_BAS, PT:= TEMPS_SORTIE_VERIN);

TAMPO_DEPRESSION_TON(IN:= START_TAMPO_DEPRESSION, PT:= T#2S);
TAMPO_MISE_SOUS_PRESSION(IN:= START_TAMPO_MISE_SOUS_PRESSION, PT:= PUMP_PARAMS.ST3_TEMPS_MISE_SOUS_PRESSION);
TAMPO_STABILISATION(IN:= START_TAMPO_STABILISATION, PT:= PUMP_PARAMS.ST3_TEMPS_STABILISATION);
TAMPO_MESURE(IN:= START_TAMPO_MESURE, PT:= PUMP_PARAMS.ST3_TEMPS_MESURE);
JIG_STATUS_R_TRIG(CLK:= CONVEYOR.JIG_ST3.STATUS);
PROG_STEPS.ST3:=STEP;]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>